-- Test: TEST123 (Executor)
-- @@@ START COPYRIGHT @@@
--
-- (C) Copyright 2013-2014 Hewlett-Packard Development Company, L.P.
--
--  Licensed under the Apache License, Version 2.0 (the "License");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an "AS IS" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.
--
-- @@@ END COPYRIGHT @@@
--
-- Functionality: LOBs
-- Expected files: EXPECTED130
-- Table created: 
-- Limitations: 
-- 
-- To Do:   
--      
-- Revision history:
--     (10/21/2014) - Created.
-- 

cqd TRAF_BLOB_AS_VARCHAR 'OFF'; // remove after this is made the default. 
obey TEST130(clnup);

log LOG130 clear;
obey TEST130(setup);
obey TEST130(dml);
obey TEST130(clnup);
exit;


?section clnup
drop table t130lob1 cascade;
drop table t130lob2 cascade;
drop table t130lob3 cascade;
drop table t130lob4 cascade;


?section setup

create table t130lob1 (c1 blob);
create table t130lob2 (c1 int not null, c2 blob , primary key (c1));
create table t130lob3 (c1 int not null,
c2 blob, c3 blob, primary key (c1));
create table t130lob4 (c1 int not null,
c2 char(10), c3 clob, primary key (c1));


obey TEST130(dml_insert);

?section dml_insert
insert into t130lob1 values(NULL);
select * from t130lob1;

insert into t130lob2 values(1,stringtolob('inserted row11'));
insert into t130lob2 values(2,stringtolob('inserted row12'));
insert into t130lob2 values(3,stringtolob('inserted row13'));
insert into t130lob2 values(3,stringtolob('xxxx'));
select * from t130lob2;


select lobtostring(c2,10) from t130lob2;
select lobtostring(c2,2) from t130lob2;
select c1,lobtostring(c2) from t130lob2;


obey TEST130(dml_join);

?section dml_join
insert into t130lob3 values (1,stringtolob('inserted row21a'),stringtolob('inserted row21b'));
insert into t130lob3 values (2,stringtolob('inserted row22a'),stringtolob('inserted row22b'));
insert into t130lob3 values (3,stringtolob('inserted row23a'),stringtolob('inserted row23b'));
insert into t130lob3 values (4,stringtolob('inserted row24a'),stringtolob('inserted row24b'));

prepare s from 
select c1, lobtostring(c2,25), lobtostring(c3,25)  from t130lob3;



select lobtostring(t130lob2.c2,30) from t130lob2, t130lob3 where t130lob2.c1 = t130lob3.c1;



obey TEST130(dml_update);

?section dml_update

update t130lob2 set c2=stringtolob('updated c2 in all rows');
select c1, lobtostring(c2,30) from t130lob2;

update t130lob2 set c2=stringtolob('updated row21a') where c1=1;
select c1, lobtostring(c2,30) from t130lob2;
select c1, lobtostring(c2,30) from t130lob2 where c1=1;

obey TEST130(dml_update_append);

?section dml_update_append

update t130lob2 set c2=stringtolob('appended row21a',append) where c1=1;
select c1, lobtostring(c2) from t130lob2;
select c1, lobtostring(c2) from t130lob2 where c1=1;


update t130lob2 set c2=stringtolob(' appended c2 to all rows',append);
select c1, lobtostring(c2,50) from t130lob2;

obey(dml_delete);

?section dml_delete

delete from t130lob3 where c1=1;
select c1, lobtostring(c2,30), lobtostring(c3,30)  from t130lob3;

delete from t130lob2 ;
select * from t130lob2;

obey(clnup);








